// Mocks generated by Mockito 5.2.0 from annotations
// in master/test/reqres_test/reqres_test.dart.
// Do not manually edit this file.

import 'dart:ui' as _i6;

import 'package:master/300/reqres_resource/model/resource_model.dart' as _i4;
import 'package:master/300/reqres_resource/service/reqres_servce.dart' as _i2;
import 'package:master/300/reqres_resource/view_model/provider_view_model/req_res_provider.dart'
    as _i3;
import 'package:master/product/global/resource_context.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeIReqresService_0 extends _i1.Fake implements _i2.IReqresService {}

/// A class which mocks [ReqResProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockReqResProvider extends _i1.Mock implements _i3.ReqResProvider {
  MockReqResProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Data> get resource => (super
          .noSuchMethod(Invocation.getter(#resource), returnValue: <_i4.Data>[])
      as List<_i4.Data>);
  @override
  set resource(List<_i4.Data>? _resource) =>
      super.noSuchMethod(Invocation.setter(#resource, _resource),
          returnValueForMissingStub: null);
  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);
  @override
  set isLoading(bool? _isLoading) =>
      super.noSuchMethod(Invocation.setter(#isLoading, _isLoading),
          returnValueForMissingStub: null);
  @override
  _i2.IReqresService get reqresService =>
      (super.noSuchMethod(Invocation.getter(#reqresService),
          returnValue: _FakeIReqresService_0()) as _i2.IReqresService);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  bool? saveresource(
          _i5.ResourceContext? resourceContext, List<_i4.Data>? resources) =>
      (super.noSuchMethod(
              Invocation.method(#saveresource, [resourceContext, resources]))
          as bool?);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
